[
    {
        "label": "nth_happy_number",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "nth_happy_number",
        "description": "nth_happy_number",
        "detail": "nth_happy_number",
        "documentation": {}
    },
    {
        "label": "nth_happy_number",
        "importPath": "nth_happy_number",
        "description": "nth_happy_number",
        "isExtraImport": true,
        "detail": "nth_happy_number",
        "documentation": {}
    },
    {
        "label": "os,sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os.sys",
        "description": "os.sys",
        "detail": "os.sys",
        "documentation": {}
    },
    {
        "label": "pytest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest",
        "description": "pytest",
        "detail": "pytest",
        "documentation": {}
    },
    {
        "label": "Happynum",
        "kind": 2,
        "importPath": "01-nth_happy_number-Python.nth_happy_number",
        "description": "01-nth_happy_number-Python.nth_happy_number",
        "peekOfCode": "def Happynum(n):\n    sum = 0\n    while(n!=0):\n        sum += (n%10)**2\n        n//=10\n    if sum == 1:\n        return True\n    elif sum<10:\n        return False\n    else:",
        "detail": "01-nth_happy_number-Python.nth_happy_number",
        "documentation": {}
    },
    {
        "label": "nth_happy_number",
        "kind": 2,
        "importPath": "01-nth_happy_number-Python.nth_happy_number",
        "description": "01-nth_happy_number-Python.nth_happy_number",
        "peekOfCode": "def nth_happy_number(n):\n    f = 1\n    g = 0\n    while(f<=abs(n)):\n        g+=1\n        if(Happynum(g)):\n            f+=1\n    return g",
        "detail": "01-nth_happy_number-Python.nth_happy_number",
        "documentation": {}
    },
    {
        "label": "test_nth_happy_number",
        "kind": 2,
        "importPath": "01-nth_happy_number-Python.test_nth_happy_number",
        "description": "01-nth_happy_number-Python.test_nth_happy_number",
        "peekOfCode": "def test_nth_happy_number(a, result):\n    assert nth_happy_number(a) == result",
        "detail": "01-nth_happy_number-Python.test_nth_happy_number",
        "documentation": {}
    }
]