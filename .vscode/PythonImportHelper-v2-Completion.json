[
    {
        "label": "pytest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest",
        "description": "pytest",
        "detail": "pytest",
        "documentation": {}
    },
    {
        "label": "dicetoorderedhand",
        "importPath": "dicetoorderedhand",
        "description": "dicetoorderedhand",
        "isExtraImport": true,
        "detail": "dicetoorderedhand",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "dicetoorderedhand",
        "kind": 2,
        "importPath": "11-dicetoorderedhand-Python.dicetoorderedhand",
        "description": "11-dicetoorderedhand-Python.dicetoorderedhand",
        "peekOfCode": "def dicetoorderedhand(a, b, c):\n    L = max(a,b,c)#gives the largest value\n    S = min(a,b,c)#gives the smallest value\n    M = a + b + c - L - S# gives the middle value\n    p = L * (10)**2 + M * 10 + S \n    return p",
        "detail": "11-dicetoorderedhand-Python.dicetoorderedhand",
        "documentation": {}
    },
    {
        "label": "test_dicetoorderedhand",
        "kind": 2,
        "importPath": "11-dicetoorderedhand-Python.test_dicetoorderedhandle",
        "description": "11-dicetoorderedhand-Python.test_dicetoorderedhandle",
        "peekOfCode": "def test_dicetoorderedhand(a, b, c, check):\n    assert dicetoorderedhand(a, b, c) == check",
        "detail": "11-dicetoorderedhand-Python.test_dicetoorderedhandle",
        "documentation": {}
    }
]