[
    {
        "label": "nondestructiveRemoveRepeats",
        "kind": 2,
        "importPath": "non_destructive_remove_repeats",
        "description": "non_destructive_remove_repeats",
        "peekOfCode": "def nondestructiveRemoveRepeats(L):\n    res=[]\n    for i in range(len(L)):\n        if L[i] not in res:\n            res.append(L[i])\n    return res\nprint(nondestructiveRemoveRepeats([1, 3, 5, 3, 3, 2, 1, 7, 5]) == [1, 3, 5, 2, 7])\nprint(nondestructiveRemoveRepeats([1, 5, 3, 3, 2, 1, 7, 5]) == [1, 5, 3, 2, 7])\nprint(nondestructiveRemoveRepeats([1, 2, 3, 5, 3, 3, 2, 1, 7, 5]) == [1, 2, 3, 5, 7])\nprint (\"All test cases passed....\")",
        "detail": "non_destructive_remove_repeats",
        "documentation": {}
    }
]